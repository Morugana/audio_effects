`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// AY1718 Sem 1 EE2020 Project
// Project Name: Audio Effects
// Module Name: AUDIO_FX_TOP
// Team No.: THURSDAY 06
// Student Names: PUNG YANHAN, ZHANG QIZHUN
// Matric No.: A0169467L, A0177689B 
// Description: 
// 
// Work Distribution: PUNG YANHAN (STUDENT A), 
//                    ZHANG QIZHUN (STUDENT B) 
//////////////////////////////////////////////////////////////////////////////////

module AUDIO_FX_TOP(
    input PS2Data,          // keyboard module data
    input PS2Clk,           // keyboard module clock
    input [12:11]rsw,       // record voice and playback 
    input [6:0]sw,          // music instruments
    input sw7,              // music box
    input [15:13]sel,       // 8 to 1 mux
    output [6:0]led,        //music box led
    output [15:9]kled,      // keyboard led display  
    
    input CLK,             // 100MHz FPGA clock
    
    input  J_MIC3_Pin3,   // PmodMIC3 audio input data (serial)
    output J_MIC3_Pin1,   // PmodMIC3 chip select, 20kHz sampling clock
    output J_MIC3_Pin4,   // PmodMIC3 serial clock (generated by module SPI.v)
     
    output J_DA2_Pin1,    // PmodDA2 sampling clock (generated by module DA2RefComp.vhd)
    output J_DA2_Pin2,    // PmodDA2 Data_A, 12-bit speaker output (generated by module DA2RefComp.vhd)
    output J_DA2_Pin3,    // PmodDA2 Data_B, not used (generated by module DA2RefComp.vhd)
    output J_DA2_Pin4     // PmodDA2 serial clock, 50MHz clock
    );

    //////////////////////////////////////////////////////////////////////////////////
    // Clock Divider Module: Generate necessary clocks from 100MHz FPGA CLK
    // Please create the clock divider module and instantiate it here.
      wire clk_20k;
      wire clk_50M;
      wire clk_40k;
      wire clk_10k;
      
      clockgen T1(CLK, clk_20k, clk_50M, clk_40k, clk_10k);
  
     //////////////////////////////////////////////////////////////////////////////////
     //SPI Module: Converting serial data into a 12-bit parallel register
     //Do not change the codes in this area
       wire [11:0]MIC_in;
       SPI u1 (CLK, clk_20k, J_MIC3_Pin3, J_MIC3_Pin1, J_MIC3_Pin4, MIC_in);
   
    /////////////////////////////////////////////////////////////////////////////////////
    // Real-time Audio Effect Features
    // Please create modules to implement different features and instantiate them here   
      wire [11:0] speaker_out;
      
      mux T2 (MIC_in, m1, m2, m3, m4, m5, m6, m7, sel, speaker_out);
    
      //Student A///////////////////////////////////////////////////////////////////////
      wire [11:0] m1;
      wire [11:0] m2;
      wire [11:0] m3;
      wire [11:0] m4;
      
      //Basic
      delayone A1 (MIC_in, clk_20k, m1);

      
      //Improvements
      recordthree A2 (MIC_in, clk_20k, rsw, m2);
      highpitch A3 (MIC_in, clk_20k, clk_40k, m3);
      lowpitch A4 (MIC_in, clk_20k, clk_10k, m4);
      
      
      //Student B///////////////////////////////////////////////////////////////////////     
      wire [11:0] m5;
      wire [11:0] m6;
      
      wire S1;
      wire [6:0] S2;
      wire S3;
      
      //Basic
      music_instrument B11 (sw, CLK, S1);
      SPI B12 (CLK, clk_20k, S1, J_MIC3_Pin1, J_MIC3_Pin4, m5);
      
      //Improvements
      little_star B21 (CLK, sw7, S2, led);
      music_instrument B22 (S2, CLK, S3);
      SPI B23 (CLK, clk_20k, S3, J_MIC3_Pin1, J_MIC3_Pin4, m6);



      //Extra Features/////////////////////////////////////////////////////////////////     
      wire [11:0] m7;
      
      wire [6:0] E1;
      wire E2;
      
      top EF1 (CLK, PS2Data, PS2Clk, kled, E1);
      music_instrument EF2 (E1, CLK, E2);
      SPI EF3 (CLK, clk_20k, E2, J_MIC3_Pin1, J_MIC3_Pin4, m7);
      
      
      
    
      //assign speaker_out =
    /////////////////////////////////////////////////////////////////////////////////////
    //DAC Module: Digital-to-Analog Conversion
    //Do not change the codes in this area        
      DA2RefComp u2(clk_50M, clk_20k, speaker_out, ,1'b0, J_DA2_Pin2, J_DA2_Pin3, J_DA2_Pin4, J_DA2_Pin1,);
        
  //////////////////////////////////////////////////////////////////////////////////

endmodule
